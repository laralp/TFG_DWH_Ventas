CREATE PROCEDURE 1_4_1_Carga_AUX_INSERTA_FACT_VENTA ()
BEGIN
  /* 1. Se obtiene la información de provincia, país y zona a partir de la tienda en el operacional, puesto que se desnormalizan en su paso al DWH en la tabla de hechos */
  CREATE TEMPORARY TABLE temp_tienda_zona_prov_pais (
    ID_TIENDA int,
	ID_PROVINCIA int,
	ID_PAIS int,
	ID_ZONA int);

  INSERT INTO temp_tienda_zona_prov_pais (ID_TIENDA, ID_PROVINCIA, ID_PAIS, ID_ZONA)
    SELECT T.ID_TIENDA, T.ID_PROVINCIA, P.ID_PAIS, TZ.ID_ZONA
	FROM TIENDA@operacional T 
	INNER JOIN PROVINCIA@operacional P ON T.ID_PROVINCIA=P.ID_PROVINCIA
	LEFT JOIN TIENDA_ZONA@operacional TZ ON T.ID_TIENDA=TZ.ID_TIENDA;
  COMMIT; 
  
  /* 2. Se insertan en AUX_INSERTA_FACT_VENTA los datos ya transformados, con los ID propios del Datawarehouse para que la posterior inserción en la tabla de FACT_VENTA sea lo más limpia posible */
  TRUNCATE TABLE STAGING.AUX_INSERTA_FACT_VENTA;
  
  INSERT INTO STAGING.AUX_INSERTA_FACT_VENTA (COD_VENTA, FECHA_HORA, ID_FECHA, ID_MES, ID_TRIMESTRE, ID_SEMESTRE, ID_ANO, ID_ARTICULO, ID_TIPO_PRODUCTO, ID_MARCA, ID_TIENDA, ID_PROVINCIA, ID_PAIS, ID_ZONA, ID_SECCION, ID_PERIODO, ID_CAMPANA, PRECIO_UNITARIO, UNIDADES, PRECIO, FECHA_ALTA, USUARIO_ALTA)
    SELECT AFV.ID_VENTA,
	       AFV.FECHA_HORA,
		   CAST(FECHA_HORA AS DATE),
		   MONTH(FECHA_HORA),
		   CASE 
		      WHEN (MONTH(FECHA_HORA) IN (1,2,3)) THEN 1
			  WHEN (MONTH(FECHA_HORA) IN (4,5,6)) THEN 2
			  WHEN (MONTH(FECHA_HORA) IN (7,8,9)) THEN 3
			  ELSE 4
		   END CASE,
		   CASE 
		      WHEN (MONTH(FECHA_HORA) IN (1,2,3,4,5,6)) THEN 1
			  ELSE 2
		   END CASE,	
		   YEAR(AFV.FECHA_HORA),
		   CASE 
		     WHEN AFV.ID_ARTICULO IS NULL THEN 0
			 WHEN (AFV.ID_ARTICULO IS NOT NULL AND A.ID_ARTICULO IS NULL) THEN -1
			 ELSE A.ID_ARTICULO;
		   END CASE,
		   CASE 
		     WHEN AFV.ID_TIPO_PRODUCTO IS NULL THEN 0
			 WHEN (AFV.ID_TIPO_PRODUCTO IS NOT NULL AND TP.ID_TIPO_PRODUCTO IS NULL) THEN -1
			 ELSE TP.ID_TIPO_PRODUCTO
		   END CASE,
		   CASE 
		     WHEN AFV.ID_MARCA IS NULL THEN 0
			 WHEN (AFV.ID_MARCA IS NOT NULL AND M.ID_MARCA IS NULL) THEN -1
			 ELSE M.ID_MARCA
		   END CASE,
		   CASE 
		     WHEN AFV.ID_TIENDA IS NULL THEN 0
			 WHEN (AFV.ID_TIENDA IS NOT NULL AND T.ID_TIENDA IS NULL) THEN -1
			 ELSE T.ID_TIENDA
		   END CASE,
		   CASE 
		     WHEN TMP.ID_PROVINCIA IS NULL THEN 0
			 WHEN (TMP.ID_PROVINCIA IS NOT NULL AND PR.ID_PROVINCIA IS NULL) THEN -1
			 ELSE PR.ID_PROVINCIA
		   END CASE,		   
		   CASE 
		     WHEN TMP.ID_PAIS IS NULL THEN 0
			 WHEN (TMP.ID_PAIS IS NOT NULL AND P.ID_PAIS IS NULL) THEN -1
			 ELSE P.ID_PAIS
		   END CASE,
		   CASE 
		     WHEN TMP.ID_ZONA IS NULL THEN 0
			 WHEN (TMP.ID_ZONA IS NOT NULL AND Z.ID_ZONA IS NULL) THEN -1
			 ELSE Z.ID_ZONA
		   END CASE,		   
		   CASE 
		     WHEN AFV.ID_SECCION IS NULL THEN 0
			 WHEN (AFV.ID_SECCION IS NOT NULL AND S.ID_SECCION IS NULL) THEN -1
			 ELSE S.ID_SECCION
		   END CASE,
		   CASE 
		     WHEN AFV.ID_PERIODO IS NULL THEN 0
			 WHEN (AFV.ID_PERIODO IS NOT NULL AND PE.ID_PERIODO IS NULL) THEN -1
			 ELSE PE.ID_PERIODO
		   END CASE,		   
		   CASE 
		     WHEN AFV.ID_CAMPANA IS NULL THEN 0
			 WHEN (AFV.ID_CAMPANA IS NOT NULL AND C.ID_CAMPANA IS NULL) THEN -1
			 ELSE C.ID_CAMPANA
		   END CASE,
		   AFV.PRECIO_UNITARIO,
		   AFV.UNIDADES,
		   AFV.PRECIO,
		   current_timestamp,
		   current_user
	FROM STAGING.AUX_INSERTA_FACT_VENTA AFV
	LEFT JOIN temp_tienda_zona_prov_pais TMP ON AFV.ID_TIENDA=TMP.ID_TIENDA
	LEFT JOIN COMERCIAL.DIM_ARTICULO A ON AFV.ID_ARTICULO=A.COD_ARTICULO
	LEFT JOIN COMERCIAL.DIM_MARCA M ON AFV.ID_MARCA=M.COD_MARCA
	LEFT JOIN COMERCIAL.DIM_SECCION S ON AFV.ID_SECCION=S.COD_SECCION
	LEFT JOIN COMERCIAL.DIM_CAMPANA C ON AFV.ID_CAMPANA=C.COD_CAMPANA
	LEFT JOIN COMERCIAL.DIM_TIPO_PRODUCTO TP ON AFV.ID_TIPO_PRODUCTO=C.COD_TIPO_PRODUCTO
	LEFT JOIN COMERCIAL.DIM_PERIODO PE ON AFV.ID_PERIODO=PE.COD_PERIODO	
	LEFT JOIN MAESTROS.DIM_TIENDA T ON AFV.ID_TIENDA=T.COD_TIENDA
	LEFT JOIN MAESTROS.DIM_PAIS P ON TMP.ID_PAIS=P.COD_PAIS
	LEFT JOIN MAESTROS.DIM_ZONA Z ON TMP.ID_ZONA=Z.COD_ZONA
	LEFT JOIN MAESTROS.DIM_PROVINCIA PR ON TMP.ID_PROVINCIA=PR.COD_PROVINCIA
	;
  COMMIT;
END;