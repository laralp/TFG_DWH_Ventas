CREATE PROCEDURE 1_3_3_Carga_AUX_MMTT_TRIMESTRE ()
BEGIN
  CREATE TEMPORARY TABLE temp_mmtt_trim (
  MMTT_TRIMESTRE bit,
  MMTT_TRIMESTRE_POST bit,
  ID_ANO int,
  ID_TRIMESTRE int,
  ID_TIENDA int);
  INSERT INTO temp_mmtt_trim (MMTT_TRIMESTRE, MMTT_TRIMESTRE_POST, ID_ANO, ID_TRIMESTRE, ID_TIENDA)
    SELECT IF(COUNT(MMTT_MES)=SUM(MMTT_MES),1,0),
	       IF(COUNT(MMTT_MES)=SUM(MMTT_DIA_MES),1,0),
		   ID_ANO,
		   IF(ID_MES IN (1,2,3),1,
		      IF(ID_MES IN (4,5,6),2,
			     IF(ID_MES IN (7,8,9),3,4))),
		   ID_TIENDA
	FROM STAGING.AUX_MMTT_MES
	GROUP BY 3,4,5;
  /* Se actualizan los registros que ya existen */
  UPDATE STAGING.AUX_MMTT_TRIMESTRE A
  INNER JOIN temp_mmtt_trim T
  ON (A.ID_ANO=T.ID_ANO AND A.ID_TRIMESTRE=T.ID_TRIMESTRE AND A.ID_TIENDA=T.ID_TIENDA)
  SET MMTT_TRIMESTRE=T.MMTT_TRIMESTRE,
      MMTT_TRIMESTRE_POST=T.MMTT_TRIMESTRE_POST,
	  FECHA_MODIFICACION=current_timestamp,
	  USUARIO_MODIFICACION=current_user;
  COMMIT;
  /* Se insertan los registros nuevos */
  INSERT INTO STAGING.AUX_MMTT_TRIMESTRE (ID_TIENDA, ID_TRIMESTRE, ID_ANO, MMTT_TRIMESTRE, MMTT_TRIMESTRE_POST, FECHA_ALTA, USUARIO_ALTA)
    SELECT T.ID_TIENDA, T.ID_TRIMESTRE, T.ID_ANO, T.MMTT_TRIMESTRE, T.MMTT_TRIMESTRE_POST, current_timestamp, current_user
    FROM temp_mmtt_trim T
    LEFT JOIN STAGING.AUX_MMTT_TRIMESTRE A
    ON (A.ID_ANO=T.ID_ANO AND A.ID_TRIMESTRE=T.ID_TRIMESTRE AND A.ID_TIENDA=T.ID_TIENDA)
    WHERE A.ID_ANO IS NULL;  
  COMMIT;
END;